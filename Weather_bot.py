#–í—Å–µ –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import telebot
import requests
import json
import os
import datetime
import time

from telebot import types
from telebot.handler_backends import State, StatesGroup
from telebot.storage import StateMemoryStorage
from telebot import custom_filters


#–ú–æ–∏ —Ç–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
class Config:
    bot_token = '7990356597:AAGTX7a0tbvC4SsIQ3q3F5nqhS7HoFVG2A0'
    weather_api = 'a7362a9aee7f1dcc756ca733be85b29d'


#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
config = Config() #—Å–æ–∑–¥–∞—é —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
storage = StateMemoryStorage() #–¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot = telebot.TeleBot(config.bot_token, state_storage=storage)#—Å–æ–∑–¥–∞—é —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞

#–°–æ–∑–¥–∞—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Ñ–∞–π–ª–æ–≤
file_with_fav = 'user_favorites.json' #–Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ–≤–æ—Ä—è—â–∏–µ (—Å–æ–∑–¥–∞—é —Ñ–∞–π–ª—ã)
file_for_logging = 'bot_activity.log'
file_for_cache = 'weather_cache.json'
bot_stats_file = 'bot_stats.json'


#–ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–∂–µ–π—Å–æ–Ω —Ñ–∞–π–ª–∞
def load_data(filename, default=None):
    if default is None:
        default = {}
    if os.path.exists(filename): #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ —Ñ–∞–π–ª –≤–æ–æ–±—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        try:
            with open(filename, 'r', encoding='utf-8') as f:
                return json.load(f)
        except:
            return default
    return default


#–°–æ—Ö—Ä–∞–Ω—è—é –¥–∞–Ω–Ω—ã–µ –≤ –¥–∂–µ–π—Å–æ–Ω —Ñ–∞–π–ª
def save_data(data, filename):
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)


#–ó–∞–≥—Ä—É–∂–∞—é –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞, –∫—ç—à
user_favorites = load_data(file_with_fav)
weather_cache = load_data(file_for_cache)
bot_stats = load_data(bot_stats_file, {
    "users": {}, #–∑–¥–µ—Å—å —Ç–æ–∂–µ –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞—Ä–µ–π –≥–æ–≤–æ—Ä—è—â–∏–µ
    "weather_requests": 0,
    "fav_added": 0,
    "fav_removed": 0,
    "commands": {}
})


#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log_action(user_id, username, action):
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") #–∑–∞–ø–∏—Å—ã–≤–∞—é —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    log_entry = f"{timestamp} | UserID: {user_id} | Username: @{username} | Action: {action}\n"

    #–ó–¥–µ—Å—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    if user_id not in bot_stats["users"]:
        bot_stats["users"][user_id] = {
            "first_seen": timestamp,
            "last_seen": timestamp,
            "username": username
        }
    else:
        bot_stats["users"][user_id]["last_seen"] = timestamp

    action_type = action.split(":")[0]
    bot_stats["commands"][action_type] = bot_stats["commands"].get(action_type, 0) + 1
#–ó–∞–ø–∏—Å—ã–≤–∞—é –≤ –ª–æ–≥ —Ñ–∞–π–ª
    with open(file_for_logging, 'a', encoding='utf-8') as f:
        f.write(log_entry)
    save_data(bot_stats, bot_stats_file)#—Å–æ—Ö—Ä–∞–Ω—è—é –Ω–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É


#Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö (–∫–∞–∫ —è –ø–æ–Ω—è–ª–∞)
class LoggingMiddleware:
    def __init__(self, bot):
        self.bot = bot

    def pre_process_message(self, message): #–ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞
        user = message.from_user
        log_action(user.id, user.username, f"Received: {message.text}")

    def post_process_message(self, message, result): #–ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞
        user = message.from_user
        log_action(user.id, user.username, f"Processed: {message.text}")


bot.setup_middleware(LoggingMiddleware(bot))

#–§–∏–ª—å—Ç—Ä—ã –ø–æ–¥ –∫–∞—Å—Ç–æ–º (—è –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω—è–ª–∞, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –≤—Ä–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–∫–∞ –Ω–∞–ø–∏—Å–∞–ª–∞ –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª–æ–º–∞–ª)
class IsCommand(telebot.custom_filters.SimpleCustomFilter):
    key = 'is_command'
    @staticmethod
    def check(message: telebot.types.Message):
        return message.text and message.text.startswith('/')

#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
bot.add_custom_filter(IsCommand())

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–∏–¥–Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ (–∫—Ä–æ–º–µ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞)
def create_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)#–ø–æ–≥–∞–Ω—è—é —Ä–∞–∑–º–µ—Ä
    #–≠—Å—Ç–µ—Ç–∏–∫ –∫–Ω–æ–ø–æ—á–∫–∏
    buttons = [
        '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è',
        '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç üîó',
        '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚≠ê',
        '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ ‚ùå',
        '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ üìã'
    ]
    markup.add(*buttons)
    return markup

global_keyboard = create_keyboard()


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—ã –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@bot.message_handler(commands=['start', 'hello'])
def start(message):
    log_action(message.from_user.id, message.from_user.username, f"Command: {message.text}")#–Ω–µ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!', reply_markup=global_keyboard)
    help_command(message)#—Å—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞—é /help, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª, —á—Ç–æ –∫ —á–µ–º—É


@bot.message_handler(commands=['help'])
def help_command(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /help")
    help_text = (
        "üöÄ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/show_weather - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
        "/website - –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç\n"
        "/add_to_fav - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n"
        "/delete_from_fav - —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ\n"
        "/show_fav - –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
    )
    bot.send_message(message.chat.id, help_text, reply_markup=global_keyboard)


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤—ã–∑–æ–≤ —Å–∞–π—Ç–∞
@bot.message_handler(commands=['website'])
def website(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /website")
    #–î–µ–ª–∞—é inline –∫–Ω–æ–ø–∫—É
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", url="https://openweathermap.org/city/2643743"))
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç:", reply_markup=markup)
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    bot.send_message(message.chat.id, "–ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=global_keyboard)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
@bot.message_handler(commands=['add_to_fav'])
def add_fav(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /add_to_fav")
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:", reply_markup=global_keyboard)
    bot.register_next_step_handler(msg, process_add_fav)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
def process_add_fav(message):
    city = message.text.strip().lower()
    log_action(message.from_user.id, message.from_user.username, f"Add to fav: {city}")
    chat_id = str(message.chat.id)
    if chat_id not in user_favorites:
        user_favorites[chat_id] = []

    if city not in user_favorites[chat_id]: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª—Å—è –≥–æ—Ä–æ–¥ (—É–∂–µ –Ω–µ –±—ã–ª –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º)
        user_favorites[chat_id].append(city)
        save_data(user_favorites, file_with_fav)
        #–æ–ø—è—Ç—å –æ–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        bot_stats['fav_added'] += 1
        save_data(bot_stats, bot_stats_file)
        #–≤—ã–≤–æ–∂—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —á—Ç–æ –≥–æ—Ä–æ–¥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ—á–Ω–æ –ø–æ–Ω—è–ª, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        bot.send_message(message.chat.id, f"‚úÖ –ì–æ—Ä–æ–¥ {city.capitalize()} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!", reply_markup=global_keyboard)#—á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—Ä–∞—Å–∏–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã
    else: #–µ—Å–ª–∏ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –ì–æ—Ä–æ–¥ {city.capitalize()} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!\n \n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n–≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /add_to_fav \n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É", reply_markup=global_keyboard)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–º–µ—Ö–∞–Ω–∏–∫–∞ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—é, —Ç–æ–ª—å–∫–æ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º)
@bot.message_handler(commands=['delete_from_fav'])
def del_fav(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /delete_from_fav")
    chat_id = str(message.chat.id)
    if chat_id in user_favorites and user_favorites[chat_id]:
        cities = "\n".join([city.capitalize() for city in user_favorites[chat_id]])
        msg = bot.send_message(message.chat.id, f"–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞:\n{cities}\n–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=global_keyboard)
        bot.register_next_step_handler(msg, process_del_fav)
    else:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –≥–æ—Ä–æ–¥–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º", reply_markup=global_keyboard)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
def process_del_fav(message):
    city = message.text.strip().lower()
    log_action(message.from_user.id, message.from_user.username, f"Delete from fav: {city}")
    chat_id = str(message.chat.id)

    if chat_id in user_favorites and city in user_favorites[chat_id]:
        user_favorites[chat_id].remove(city)
        save_data(user_favorites, file_with_fav)
        bot_stats['fav_removed'] += 1
        save_data(bot_stats, bot_stats_file)
        bot.send_message(message.chat.id, f"‚úÖ –ì–æ—Ä–æ–¥ {city.capitalize()} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!", reply_markup=global_keyboard)
    else:
        bot.send_message(message.chat.id, f"‚ùå –ì–æ—Ä–æ–¥ {city.capitalize()} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º", reply_markup=global_keyboard)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (—á—Ç–æ–± –≤—Å–µ –±—ã–ª–æ –∫—Ä–∞—Å–∏–≤–æ, —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)
@bot.message_handler(commands=['show_fav'])
def show_fav(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /show_fav")
    chat_id = str(message.chat.id)
    if chat_id in user_favorites and user_favorites[chat_id]:
        cities = "\n".join([city.capitalize() for city in user_favorites[chat_id]])
        bot.send_message(message.chat.id, f"‚≠ê –í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n{cities}", reply_markup=global_keyboard)
    else:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤", reply_markup=global_keyboard)


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø–æ–≥–æ–¥—É —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
@bot.message_handler(commands=['show_weather'])
def get_weather_command(message):
    log_action(message.from_user.id, message.from_user.username, "Command: /show_weather")
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º):", reply_markup=global_keyboard)
    bot.register_next_step_handler(msg, process_weather_request)

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤—ã–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã
def process_weather_request(message):
    city = message.text.strip()
    log_action(message.from_user.id, message.from_user.username, f"Weather request: {city}")
    get_weather(message, city)

#–ü–æ–ª—É—á–∞—é –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É
def get_weather(message, city):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
    city_key = city.lower()
    current_time = time.time()

    if city_key in weather_cache:
        cached = weather_cache[city_key]
        if current_time - cached['timestamp'] < 300:# 5 –º–∏–Ω—É—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∞
            send_weather_info(message, city, cached['data'])
            return

    # –ó–∞–ø—Ä–æ—Å –∫ API —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    try:
        res = requests.get(
            f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.weather_api}&units=metric',
            timeout=10 #–¥–∞—é —Ç–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥
        )
        res.raise_for_status()

        data = res.json()
        weather_cache[city_key] = {
            'data': data,
            'timestamp': current_time
        }
        save_data(weather_cache, file_for_cache)

        bot_stats['weather_requests'] += 1 #–æ–ø—è—Ç—å –æ–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        save_data(bot_stats, bot_stats_file)

        send_weather_info(message, city, data)
#–ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ç–æ, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª–Ω–∏–ª–∞ –∫–æ–º–∞–Ω–¥—É
    except requests.exceptions.Timeout:
        bot.reply_to(message, '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–≥–æ–¥—ã\n–í–µ—Ä–æ—è—Ç–Ω–æ –≥–æ—Ä–æ–¥ –≤–≤–µ–¥–µ–Ω –Ω–µ –≤–µ—Ä–Ω–æ', reply_markup=global_keyboard)
        bot.send_message(message.chat.id, '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ, –≤—ã–∑–æ–≤–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É /show_weather –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è')
    except requests.exceptions.RequestException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}\n–í–µ—Ä–æ—è—Ç–Ω–æ –≥–æ—Ä–æ–¥ –≤–≤–µ–¥–µ–Ω –Ω–µ –≤–µ—Ä–Ω–æ', reply_markup=global_keyboard)
        bot.send_message(message.chat.id,'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ, –≤—ã–∑–æ–≤–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É /show_weather –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è')
    except Exception as e:
        bot.reply_to(message, f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}', reply_markup=global_keyboard)

#–§–æ—Ä–º–∞—Ç–∏—Ä—É—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é –≤—Å—é –∏–Ω—Ñ—É –ø–æ –ø–æ–≥–æ–¥–µ
def send_weather_info(message, city, data):
    temp = data["main"]["temp"]
    temp_feels_like = data["main"]["feels_like"]
    humidity = data["main"]["humidity"]
    wind_speed = data["wind"]["speed"]

    weather_info = (
        f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()}:\n"
        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(temp)}¬∞C\n"
        f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {round(temp_feels_like)}¬∞C\n"
        f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
        f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/c"
    )

    bot.reply_to(message, weather_info, reply_markup=global_keyboard)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=global_keyboard)


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback –∑–∞–ø—Ä–æ—Å—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith('add_fav_'))
def callback_add_fav(call):
    city = call.data.split('_')[2]
    chat_id = str(call.message.chat.id)

    if chat_id not in user_favorites:
        user_favorites[chat_id] = []

    if city not in user_favorites[chat_id]:
        user_favorites[chat_id].append(city)
        save_data(user_favorites, file_with_fav)
        bot_stats['fav_added'] += 1
        save_data(bot_stats, bot_stats_file)
        #–æ–ø—è—Ç—å –ø–æ–∫–∞–∑—ã–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ, –¥–ª—è –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç–∏
        bot.answer_callback_query(call.id, f"‚úÖ –ì–æ—Ä–æ–¥ {city.capitalize()} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")
    else:
        bot.answer_callback_query(call.id, f"‚ö†Ô∏è –ì–æ—Ä–æ–¥ {city.capitalize()} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!\n \n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n–≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /add_to_fav \n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚≠ê")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(call.message.chat.id, "–ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=global_keyboard)


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    log_action(message.from_user.id, message.from_user.username, f"Button: {message.text}")
    #—Ç–µ–∫—Å—Ç –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º):", reply_markup=global_keyboard)
        bot.register_next_step_handler(msg, process_weather_request)

    elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç üîó':
        website(message)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚≠ê':
        add_fav(message)

    elif message.text == '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ ‚ùå':
        del_fav(message)

    elif message.text == '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ üìã':
        show_fav(message)

    else:#–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ /help", reply_markup=global_keyboard)


if __name__ == '__main__':
    bot.add_custom_filter(telebot.custom_filters.StateFilter(bot)) #—Ä–µ–≥–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    bot.infinity_polling()#—á—Ç–æ–±—ã –±–æ—Ç –≤—Å–µ–≥–¥–∞ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω